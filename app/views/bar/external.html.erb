var blinkmarks = function(){
	
	var REMOTE = "<%= root_url %>"
		,head = document.getElementsByTagName('head')[0]
		,deps = 0
		,finished_deps = 0
		,bar_built = false
		,rpc = null
		;
	
	//Function for building the bar	
	function buildBar(){
		var $ = jQuery.noConflict()
				,$existing_bar = jQuery('div#container.blinkmarks')
				;
				
		//remove the bar if its already rendered		
		if($existing_bar.length > 0 && $existing_bar.is(":visible")){
			$('.blinkmarks').fadeOut('fast');
//			$existing_bar.slideUp('fast');
			return false;
		}else if($existing_bar.length > 0 && $existing_bar.is(":not(:visible)")){
			$existing_bar.slideDown('fast').find('*').fadeIn('fast');
			return false;
		}
		
		if(bar_built === false){
			var $barDiv = $('<div id="container" class="blinkmarks"></div>')
				,$closeBtn = $('<a href="#">X</a>')
				;	
			
			$barDiv.css({
				width: '100%',
				height: '30px',
				'background-color': 'transparent',
				'background-image': "url("+REMOTE+"images/bar_back.png)",
				'background-repeat': 'repeat-x',
				border: 'none',
				margin: '0',
				position: 'fixed',
				'padding': "5px 0",
				top: "0px",
				left: "0px",
				display: 'none',
				'z-index': "999999"
			});
		

			$closeBtn.css({
				float: 'right',
				"padding-right": "10px",
				"font-size": "18px",
				"padding-top": "5px"
			}).attr("title", "click to close blinkmarks");
			
			$closeBtn.click(function(){
				$('.blinkmarks').fadeOut('fast');
				return false;
			});
		
			//add a small style sheet to the host head. because easyxdm won't let us set the styles of the iframe it generates
			//$(head).append("<style type=\"text/css\">#easyXDM_default0_provider{ float: left;}</style>");
			$(head).append('<link media="screen" type="text/css" href="'+REMOTE+'stylesheets/external.css" rel="stylesheet">');
			$barDiv.append($closeBtn);
			$('body').prepend($barDiv);
		
		
			rpc = new easyXDM.Rpc({
			    remote: REMOTE+"/frame?url="+encodeURIComponent(window.location.href)+"&title="+encodeURIComponent(window.document.title), // the path to the provider
					container: $barDiv.get(0),
					props : {
						name : window.location.href+"||"+window.document.title,
						width : '90%',
						height : '30px',
						scrolling : 'no',
						frameborder : '0',
						id : "frame",
						className: "blinkmarks",
						style: {
							float: "left",
							width: "90%",
							"padding-left" : "10px"
						}
					}
			}, 
			{
			    local: {
							buildList : function(results_array, successFn, errorFn){									
								var $linkList = $("ul.blinkmarks.search_list");
																	
								if($linkList.length === 0){
									$linkList = $("<ul class='blinkmarks search_list'></ul>").prependTo('body');
									
									$linkList.css({
										position: 'fixed',
										top: '30px',
										right: '0px',
										'z-index': "99999999",
										background : '#FFF',
										"list-style-type" : 'none',
										"padding": "9px"
									});
								}
																	
								$linkList.empty();
																	
								if(results_array.length === 0){
									$linkList.hide();
								}else{
									for(var i=0; i<results_array.length; i++){
										$linkList.append('<li><a href="'+results_array[i].url+'">"'+results_array[i].title+'"</a></li>');
									}
									$linkList.show();
								}
							},
							nextAutoSuggest : function(){
								var $all = $('.blinkmarks.search_list li')
										,$selected = $('.blinkmarks.search_list li.selected')
										,index = $all.index($selected.get(0))
										,total = $('.blinkmarks.search_list li').length
										;
										
								console.log("moving to next", index, total, $selected, $all);
						
								if(total === 0){
									return false;
								}else{
									if($selected.length === 0){
										$('.blinkmarks.search_list li:first').addClass('selected');
									}else if(index + 1 == total){
										console.log("removing selected because we are at the end");
										$selected.removeClass('selected');
										$('.blinkmarks.search_list li:first').addClass('selected');
									}else{
										console.log("putting selected to the next");
										$selected.removeClass('selected')
										.next()
										.addClass('selected')
									}
								}
							},
							prevAutoSuggest : function(){
								var $all = $('.blinkmarks.search_list li')
										,$selected = $('.blinkmarks.search_list li.selected')
										,index = $all.index($selected.get(0))
										,total = $all.length
										;
										
								console.log($selected.get(), $all, index, index-1, total);
								
								if(total === 0){
									return false;
								}else{
									if(index-1 < 0){
										console.log("removing selected because we are at the end");
										$selected.removeClass('selected');
										$('.blinkmarks.search_list li:last').addClass('selected');
									}else{
										$selected.removeClass('selected')
										.prev()
										.addClass('selected')
									}
								}
							},
						 getSelected : function(){
							$selected = $('.blinkmarks.search_list li.selected');
							if($selected.length != 0){
								window.location = $selected.find('a').attr('href');
							}else{ 
								return false;
							}
						}
				}
			});
					
			$barDiv.slideDown('fast', function(){ bar_built = true;});
		}
	}
	
	
	/*
	*
	* Lets load 3rd party dependencys from external domains!
	*
	*/	
	function scriptOnLoad(){
		console.log("script onload", typeof jQuery, typeof easyXDM, typeof JSON);
		if(typeof jQuery == "undefined" || !jQuery ||
		   typeof easyXDM == "undefined" || !easyXDM ||
		   typeof JSON == "undefined" || !JSON){
			return;
		}
		

		buildBar();
	}
	
	//If there is no jquery on the page load the latest
	if(typeof jQuery == 'undefined' || !jQuery){
		var s=document.createElement('script');
		s.setAttribute('type', "text/javascript");
		s.setAttribute('src','http://jquery.com/src/jquery-latest.js');
		head.appendChild(s);
		s.onload = scriptOnLoad;
		s.onreadystatechange = function () {
			if (this.readyState == 'complete' || this.readyState == 'loaded'){
				console.log('Jquery Loaded');
				scriptOnLoad();
			}
		};
	}
	
	//We need easyXDM to reach out of our frame 
	if(typeof easyXDM === "undefined" || !easyXDM){
		s1 = document.createElement("script");
	    s1.type = "text/javascript";
	    s1.src = REMOTE + "javascripts/easyXDM-2.4.9.102/<%= easyXDM %>";
		s1.onload = scriptOnLoad;
	    s1.onreadystatechange = function(){
	        if (this.readyState === "complete" || this.readyState === "loaded") {
	            scriptOnLoad();
	        }
	    };
	    head.appendChild(s1);
	}
	
	//I think easyXDM needs JSON
	if (typeof JSON === "undefined" || !JSON) {
        s2 = document.createElement("script");
        s2.type = "text/javascript";
        s2.src = REMOTE + "javascripts/easyXDM-2.4.9.102/json2.js";
		s2.onload = scriptOnLoad;
        s2.onreadystatechange = function(){
            if (this.readyState === "complete" || this.readyState === "loaded") {
                scriptOnLoad();
            }
        };
        head.appendChild(s2);
    }
	
			
	//public api
	//return a function that acts as a future because we may still be waiting for asyc dependencies to load
	return (function(){ 
		if(typeof jQuery != 'undefined'){
			return jQuery.extend(rpc, { 
				buildBar : buildBar
			});
		}else{
			return {buildBar : buildBar}
		}
	})();
}();